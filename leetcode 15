class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> ans;
        if(nums.size()<3) return ans;
        unordered_map<int,int> mp;
        sort(nums.begin(),nums.end());
        if(nums[0]>1) return ans;
        for(int i=0;i<nums.size();i++) mp[nums[i]]=i;
        for(int i=0;i<nums.size()-2;i++){
            if(nums[i]>0) break;
            for(int j=i+1;j<nums.size()-1;j++){
                int sum=-1*(nums[i]+nums[j]);
                if(mp.count(sum) && mp.find(sum)->second > j) ans.push_back({nums[i],nums[j],sum});
                j=mp.find(nums[j])->second;
            }
            i=mp.find(nums[i])->second;
        }
        return ans;
    }
};
